# Telegram: @rafi_broh


import base64
from Crypto.Cipher import AES


def decrypt_data(data, key):
    nonce, tag, ciphertext = data[:16], data[16:32], data[32:]
    cipher = AES.new(key, AES.MODE_EAX, nonce=nonce)
    return cipher.decrypt_and_verify(ciphertext, tag)


encrypted_data = base64.b64decode("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")


aes_key = b'\x8f\xf0o\xfe\xdf["K+\x1c=\x01a\xa9\x85='


exec(decrypt_data(encrypted_data, aes_key))
