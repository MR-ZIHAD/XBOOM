# Telegram: @rafi_broh


import base64
from Crypto.Cipher import AES


def decrypt_data(data, key):
    nonce, tag, ciphertext = data[:16], data[16:32], data[32:]
    cipher = AES.new(key, AES.MODE_EAX, nonce=nonce)
    return cipher.decrypt_and_verify(ciphertext, tag)


encrypted_data = base64.b64decode("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")


aes_key = b'M\x14\xb98FD\xa9spMET:S\x9e\x1d'


exec(decrypt_data(encrypted_data, aes_key))
