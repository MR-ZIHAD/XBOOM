# Telegram: @rafi_broh


import base64
from Crypto.Cipher import AES


def decrypt_data(data, key):
    nonce, tag, ciphertext = data[:16], data[16:32], data[32:]
    cipher = AES.new(key, AES.MODE_EAX, nonce=nonce)
    return cipher.decrypt_and_verify(ciphertext, tag)


encrypted_data = base64.b64decode("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")


aes_key = b'\x01<Da\xef\x8aUh\xc3\xad\xd5\xb6\xd3\x05%\x0c'


exec(decrypt_data(encrypted_data, aes_key))
