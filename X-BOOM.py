# Telegram: @rafi_broh


import base64
from Crypto.Cipher import AES


def decrypt_data(data, key):
    nonce, tag, ciphertext = data[:16], data[16:32], data[32:]
    cipher = AES.new(key, AES.MODE_EAX, nonce=nonce)
    return cipher.decrypt_and_verify(ciphertext, tag)


encrypted_data = base64.b64decode("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")


aes_key = b'\xba\xb8\xc2-\x10\xb4T\x05\xa0\x8e\x80HhL\x97\xc0'


exec(decrypt_data(encrypted_data, aes_key))
